#### Create guide file for array

#--------------------------------------------------------------------------------

# Define important file locations

# Working folder is core folder where this pipeline is being run.
WORKING_FOLDER=/gpfs2/scratch/elongman/Nucella_can_drilling_genomics

# Protein file is the N. canaliculata protein file that will be broken into chunks
PROTEIN_FILE=/netfiles/pespenilab_share/Nucella/processed/N.can_genome_Dec2024/protein.fa

#--------------------------------------------------------------------------------
# Currently the protein file is interleaven (i.e., the DNA sequence is in chunks of 80bps a line).
# For easy of running a loop and array, make it not interleaven

# Load modules 
seqtk=/gpfs1/home/e/l/elongman/software/seqtk/seqtk

# Use seqtk to make protein file not interleaven
$seqtk seq $PROTEIN_FILE > $WORKING_FOLDER/Gene_ontology/Nucella_canaliculata_protein.fa

#--------------------------------------------------------------------------------

# Get list of protein names
 
# Change directory
cd $WORKING_FOLDER/Gene_ontology

# Make guide files directory
mkdir guide_files

# Change directory
cd $WORKING_FOLDER/Gene_ontology/guide_files

# Get all of the scaffold/contig names 
grep ">" $WORKING_FOLDER/Gene_ontology/Nucella_canaliculata_protein.fa > protein_file_names.txt

#--------------------------------------------------------------------------------

# Modify in R
module load R/4.4.1  
R

install.packages(c('data.table', 'tidyverse', 'groupdata2'))

library(data.table)
library(tidyverse)
library(groupdata2)

#--------------------------------------------------------------------------------

data <- fread("protein_file_names.txt", header = F)
dim(data) # 204693, 5 

# Break up the data into 6 runs - will run a bash script for each run
data_run1 <- data[1:35000,]
data_run2 <- data[35001:70000,]
data_run3 <- data[70001:105000,]
data_run4 <- data[105001:140000,]
data_run5 <- data[140001:175000,]
data_run6 <- data[175001:204693,]

group(data_run1, n=35, method = "greedy") -> protein_file_names_run_1
group(data_run2, n=35, method = "greedy") -> protein_file_names_run_2
group(data_run3, n=35, method = "greedy") -> protein_file_names_run_3
group(data_run4, n=35, method = "greedy") -> protein_file_names_run_4
group(data_run5, n=35, method = "greedy") -> protein_file_names_run_5
group(data_run6, n=35, method = "greedy") -> protein_file_names_run_6


write.table(protein_file_names_run_1, "protein_file_names_array_run_1.txt", col.names = F, row.names = F, quote = F)
write.table(protein_file_names_run_2, "protein_file_names_array_run_2.txt", col.names = F, row.names = F, quote = F)
write.table(protein_file_names_run_3, "protein_file_names_array_run_3.txt", col.names = F, row.names = F, quote = F)
write.table(protein_file_names_run_4, "protein_file_names_array_run_4.txt", col.names = F, row.names = F, quote = F)
write.table(protein_file_names_run_5, "protein_file_names_array_run_5.txt", col.names = F, row.names = F, quote = F)
write.table(protein_file_names_run_6, "protein_file_names_array_run_6.txt", col.names = F, row.names = F, quote = F)

# Note each guide file has dimensions:  35000, 5 (1000 partitions, with 35 protein names in each)

q()